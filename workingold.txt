<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat App</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f9f9f9;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      flex-direction: column;
    }

    #chat {
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 65%;
      animation: fadeIn 0.5s ease-in-out;
    }

    #login {
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 500px;
      animation: fadeIn 0.5s ease-in-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }

    h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #333;
    }

    input {
      width: calc(100% - 24px);
      padding: 14px;
      margin: 10px 0;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      transition: box-shadow 0.3s, border-color 0.3s;
    }

    input:focus {
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      border-color: #5a67d8;
      outline: none;
    }

    button {
      width: 100%;
      padding: 14px;
      background-color: #5a67d8;
      border: none;
      border-radius: 8px;
      color: white;
      font-size: 14px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.3s;
    }

    button:hover {
      background-color: #434190;
      transform: translateY(-1px);
    }

    button:active {
      background-color: #4c51bf;
      transform: translateY(0);
    }

    #chat {
      display: none;
    }

    #messages {
      border: 1px solid #ddd;
      height: 650px;
      overflow-y: auto;
      padding: 10px;
      border-radius: 8px;
      background-color: #f1f1f1;
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
      transition: height 0.3s;
      display: flex;
      flex-direction: column;
    }

    .message {
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 8px;
      word-wrap: break-word;
      max-width: 70%;
    }

    .message.right {
      align-self: flex-end;
      background-color: #d1e7ff;
      color: #000000;
    }

    .message.left {
      align-self: flex-start;
      background-color: #ffffff;
      color: #000000;
    }

    .system-message {
      background-color: #f3f4f6;
      color: #1f2937;
      text-align: center;
      font-style: italic;
      border: 1px solid #d1d5db;
      border-radius: 8px;
      padding: 8px;
      margin: 8px 0;
    }

    .join-message {
      background-color: #d1fae5;
      color: #065f46;
      text-align: center;
      font-style: italic;
      border: 1px solid #10b981;
      border-radius: 8px;
      padding: 8px;
      margin: 8px 0;
    }

    .kick-message {
      background-color: #fee2e2;
      color: #b91c1c;
      text-align: center;
      font-style: italic;
      font-weight: bold;
      border: 1px solid #f87171;
      border-radius: 8px;
      padding: 8px;
      margin: 8px 0;
    }

    #header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }

    #logout {
      background-color: #e53e3e;
      margin-left: 10px;
    }

    #logout:hover {
      background-color: #c53030;
    }

    #room-data {
      margin-top: 10px;
      font-size: 12px;
      color: #555;
      max-width: 500px;
      width: 100%;
      text-align: center;
    }

    #room-header {
      display: none;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      max-width: 500px;
      padding: 10px;
      background: white;
      border-radius: 12px 12px 0 0;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      margin-bottom: -12px;
    }

    #room-name {
      font-size: 18px;
      font-weight: 500;
      color: #333;
    }

    #toggle-scroll {
      font-size: 12px;
      cursor: pointer;
      color: #5a67d8;
    }

    #toggle-scroll input {
      margin-left: 5px;
    }

    .icon-button {
      background-color: #5a67d8;
      border: none;
      border-radius: 8px;
      padding: 10px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.3s;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      margin-left: 10px;
    }

    .icon-button:hover {
      background-color: #434190;
      transform: translateY(-1px);
    }

    .icon-button:active {
      background-color: #4c51bf;
      transform: translateY(0);
    }

    .icon-button img {
      width: 20px;
      height: 20px;
    }

    .user-list {
      margin-top: 10px;
      font-size: 12px;
      color: #333;
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 10px;
    }

    .user {
      background-color: #5a67d8;
      color: white;
      padding: 5px 10px;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      font-size: 12px;
    }

    @media screen and (max-width: 768px) {

      body {
        padding: 05%;
      }

      #login,
      #chat {
        max-width: 90%;
        padding: 20px;
      }

      #messages {
        height: 500px;
      }

      input,
      button {
        padding: 12px;
        font-size: 12px;
      }
    }

    @media screen and (max-width: 480px) {

      #login,
      #chat {
        max-width: 100%;
        padding: 15px;
      }

      #messages {
        height: 400px;
      }

      input,
      button {
        padding: 10px;
        font-size: 10px;
      }

      .icon-button {
        width: 30px;
        height: 30px;
      }

      .icon-button img {
        width: 15px;
        height: 15px;
      }
    }
  </style>


</head>

<body>
  <div id="room-header">
    <div id="room-name"></div>
    <label id="toggle-scroll">Auto-scroll: <input type="checkbox" checked onclick="toggleAutoScroll()"></label>
  </div>
  <div id="login">
    <h2>Welcome to Chat App</h2>
    <input type="text" id="name" placeholder="Enter your name">
    <input type="text" id="room" placeholder="Enter room name">
    <button onclick="joinRoom()">Join Room</button>
  </div>
  <div id="chat">
    <div id="header">
      <button id="logout" onclick="logout()">LOGOUT</button>
    </div>
    <div id="messages"></div>
    <div style="display: flex;">
      <input type="text" id="message" placeholder="Enter your message" onkeypress="checkEnter(event)">
      <button class="icon-button" onclick="sendMessage()">
        <img src="http://103.147.41.15/send-button.png" alt="Send">
      </button>
    </div>
  </div>
  <div id="room-data"></div>
  <div class="user-list" id="user-list"></div>
  <script>
    let ws;
    let name;
    let room;
    let autoScroll = true;

    function joinRoom() {
      name = document.getElementById('name').value;
      room = document.getElementById('room').value;

      if (!name || !room) {
        alert('Please enter both name and room name');
        return;
      }

      ws = new WebSocket(`ws://${window.location.host}`);

      ws.onopen = () => {
        console.log('WebSocket connection opened');
        ws.send(JSON.stringify({ type: 'join', name, room }));
        document.getElementById('login').style.display = 'none';
        document.getElementById('chat').style.display = 'block';
        document.getElementById('room-header').style.display = 'flex';
        document.getElementById('room-name').textContent = `Room: ${room}`;
        document.getElementById('messages').innerHTML = ''; // Clear chatbox
        document.getElementById('room-data').innerHTML = ''; // Clear room data
        document.getElementById('user-list').innerHTML = ''; // Clear user list
      };

      ws.onmessage = (event) => {
        const data = JSON.parse(event.data);
        console.log('Received message:', data);
        const messagesDiv = document.getElementById('messages');
        const messageElement = document.createElement('div');

        // Remove any empty message elements
        Array.from(messagesDiv.children).forEach(child => {
          if (!child.textContent.trim()) {
            messagesDiv.removeChild(child);
          }
        });

        if (data.type === 'roomData') {
          updateRoomData(data);
        } else if (data.type === 'system' || data.type === 'join' || data.type === 'kick') {
          if (data.type === 'join') {
            messageElement.classList.add('join-message');
          } else if (data.type === 'kick') {
            messageElement.classList.add('kick-message');
          } else {
            messageElement.classList.add('system-message');
          }
          messageElement.textContent = `${data.message}`;
        } else {
          messageElement.classList.add('message');
          if (data.name === name) {
            messageElement.classList.add('right');
            messageElement.innerHTML = `<span>${data.name}:</span> ${data.message}`;
          } else {
            messageElement.classList.add('left');
            messageElement.innerHTML = `<span>${data.name}:</span> ${data.message}`;
          }
        }

        // Append the message element only if it has content
        if (messageElement.textContent.trim()) {
          messagesDiv.appendChild(messageElement);
        }

        if (autoScroll) {
          messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }
      };

      ws.onclose = () => {
        console.log('WebSocket connection closed');
        alert('Disconnected from server');
      };
    }

    function sendMessage() {
      const message = document.getElementById('message').value;
      if (message && ws) {
        ws.send(JSON.stringify({ type: 'message', name, room, message }));
        document.getElementById('message').value = '';
      }
    }

    function checkEnter(event) {
      if (event.key === 'Enter') {
        sendMessage();
      }
    }

    function logout() {
      if (ws) {
        ws.close();
      }
      document.getElementById('chat').style.display = 'none';
      document.getElementById('login').style.display = 'block';
      document.getElementById('room-header').style.display = 'none';
      document.getElementById('name').value = '';
      document.getElementById('room').value = '';
      document.getElementById('messages').innerHTML = ''; // Clear chatbox
      document.getElementById('room-data').innerHTML = ''; // Clear room data
      document.getElementById('user-list').innerHTML = ''; // Clear user list
    }

    function toggleAutoScroll() {
      autoScroll = !autoScroll;
      document.getElementById('toggle-scroll').querySelector('input').checked = autoScroll;
    }

    function updateRoomData(data) {
      document.getElementById('room-data').innerHTML = `Users in room: ${data.count}`;
      const userList = document.getElementById('user-list');
      userList.innerHTML = data.users.map(user => `<div class="user">${user}</div>`).join('');
    }
  </script>
</body>

</html>